// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package database

import (
	"context"
	"database/sql"
	"time"
)

type Querier interface {
	CreateOrUpdateUserStats(ctx context.Context, arg CreateOrUpdateUserStatsParams) (UserStat, error)
	CreateStudySession(ctx context.Context, arg CreateStudySessionParams) (StudySession, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	// For top 10 users
	DeleteOldStudySessions(ctx context.Context, startTime time.Time) error
	EndStudySession(ctx context.Context, arg EndStudySessionParams) (StudySession, error)
	GetActiveStudySession(ctx context.Context, userID sql.NullString) (StudySession, error)
	GetLeaderboard(ctx context.Context) ([]GetLeaderboardRow, error)
	GetStreaksToReset(ctx context.Context, lastActivityDate sql.NullTime) ([]UserStreak, error)
	GetStreaksToWarn(ctx context.Context, warningNotifiedAt sql.NullTime) ([]UserStreak, error)
	GetUser(ctx context.Context, userID string) (User, error)
	GetUserStats(ctx context.Context, userID string) (UserStat, error)
	// $1 will be the cutoff timestamp (e.g., 6 months ago)
	// User Streaks Queries
	GetUserStreak(ctx context.Context, arg GetUserStreakParams) (UserStreak, error)
	ResetAllStreakDailyFlags(ctx context.Context) error
	ResetDailyStudyTime(ctx context.Context) error
	ResetMonthlyStudyTime(ctx context.Context) error
	// $1 is (NOW() - interval '23 hours')
	ResetUserStreakCount(ctx context.Context, arg ResetUserStreakCountParams) error
	ResetWeeklyStudyTime(ctx context.Context) error
	// $1 is yesterday's date (current_date - interval '1 day')
	UpdateStreakWarningNotifiedAt(ctx context.Context, arg UpdateStreakWarningNotifiedAtParams) error
	UpsertUserStreak(ctx context.Context, arg UpsertUserStreakParams) (UserStreak, error)
}

var _ Querier = (*Queries)(nil)
